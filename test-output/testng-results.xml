<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="12" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="25677" started-at="2020-01-23T18:13:55 IST" finished-at="2020-01-23T18:14:20 IST">
    <groups>
    </groups>
    <test name="Setup Chorme Driver and DbConnection" duration-ms="3298" started-at="2020-01-23T18:13:55 IST" finished-at="2020-01-23T18:13:58 IST">
      <class name="Linq.Automation.StartUp">
        <test-method status="PASS" signature="beforeClass(java.lang.String)[pri:0, instance:Linq.Automation.StartUp@1786dec2]" name="beforeClass" is-config="true" duration-ms="3237" started-at="2020-01-23T18:13:55 IST" finished-at="2020-01-23T18:13:58 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[driver1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testSteup()[pri:0, instance:Linq.Automation.StartUp@1786dec2]" name="testSteup" duration-ms="13" started-at="2020-01-23T18:13:58 IST" finished-at="2020-01-23T18:13:58 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSteup -->
      </class> <!-- Linq.Automation.StartUp -->
    </test> <!-- Setup Chorme Driver and DbConnection -->
    <test name="Set Inspect Mode" duration-ms="1865" started-at="2020-01-23T18:13:58 IST" finished-at="2020-01-23T18:14:00 IST">
      <class name="Linq.Automation.SetInspectMode">
        <test-method status="PASS" signature="beforeMethod(boolean, java.lang.String)[pri:0, instance:Linq.Automation.SetInspectMode@3043fe0e]" name="beforeMethod" is-config="true" duration-ms="1801" started-at="2020-01-23T18:13:58 IST" finished-at="2020-01-23T18:14:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[galaxy]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test1()[pri:0, instance:Linq.Automation.SetInspectMode@3043fe0e]" name="test1" duration-ms="32" started-at="2020-01-23T18:14:00 IST" finished-at="2020-01-23T18:14:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
      </class> <!-- Linq.Automation.SetInspectMode -->
    </test> <!-- Set Inspect Mode -->
    <test name="Get Listing Data" duration-ms="60" started-at="2020-01-23T18:14:00 IST" finished-at="2020-01-23T18:14:00 IST">
      <class name="get.data.GetListingData">
        <test-method status="PASS" signature="fetch_get_listing_data(java.lang.String, int, java.lang.String, java.lang.String)[pri:0, instance:get.data.GetListingData@2a556333]" name="fetch_get_listing_data" is-config="true" duration-ms="43" started-at="2020-01-23T18:14:00 IST" finished-at="2020-01-23T18:14:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[file]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[25308]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9031144771]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[C:\\java_config\\test_data\\25308_linq_data.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetch_get_listing_data -->
        <test-method status="PASS" signature="f()[pri:0, instance:get.data.GetListingData@2a556333]" name="f" duration-ms="6" started-at="2020-01-23T18:14:00 IST" finished-at="2020-01-23T18:14:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- get.data.GetListingData -->
    </test> <!-- Get Listing Data -->
    <test name="Test Basic info card" duration-ms="4568" started-at="2020-01-23T18:14:00 IST" finished-at="2020-01-23T18:14:05 IST">
      <class name="card.view.BasicInfoCard">
        <test-method status="PASS" signature="beforeMethod(int)[pri:0, instance:card.view.BasicInfoCard@51e2adc7]" name="beforeMethod" is-config="true" duration-ms="3581" started-at="2020-01-23T18:14:00 IST" finished-at="2020-01-23T18:14:04 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[25308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="is_Basic_Card()[pri:0, instance:card.view.BasicInfoCard@51e2adc7]" name="is_Basic_Card" duration-ms="20" started-at="2020-01-23T18:14:04 IST" finished-at="2020-01-23T18:14:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- is_Basic_Card -->
        <test-method status="PASS" signature="b_name()[pri:1, instance:card.view.BasicInfoCard@51e2adc7]" name="b_name" duration-ms="63" started-at="2020-01-23T18:14:04 IST" finished-at="2020-01-23T18:14:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b_name -->
        <test-method status="FAIL" signature="b_subcat()[pri:2, instance:card.view.BasicInfoCard@51e2adc7]" name="b_subcat" duration-ms="119" started-at="2020-01-23T18:14:04 IST" finished-at="2020-01-23T18:14:04 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Automobile Showroom,Restaurant,Coaching Class And Tutorial] but found [Automobile Showroom,Restaurant,]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Automobile Showroom,Restaurant,Coaching Class And Tutorial] but found [Automobile Showroom,Restaurant,]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at card.view.BasicInfoCard.b_subcat(BasicInfoCard.java:55)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b_subcat -->
        <test-method status="FAIL" signature="b_address()[pri:3, instance:card.view.BasicInfoCard@51e2adc7]" name="b_address" duration-ms="97" started-at="2020-01-23T18:14:04 IST" finished-at="2020-01-23T18:14:04 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Saiyad ul Ajaib, Sainik Farm, Delhi] but found [Saiyad ul Ajaib, Sainik Farm]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Saiyad ul Ajaib, Sainik Farm, Delhi] but found [Saiyad ul Ajaib, Sainik Farm]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at card.view.BasicInfoCard.b_address(BasicInfoCard.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b_address -->
        <test-method status="PASS" signature="mouseMove()[pri:0, instance:card.view.BasicInfoCard@51e2adc7]" name="mouseMove" is-config="true" duration-ms="0" started-at="2020-01-23T18:14:05 IST" finished-at="2020-01-23T18:14:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mouseMove -->
      </class> <!-- card.view.BasicInfoCard -->
    </test> <!-- Test Basic info card -->
    <test name="move location card" duration-ms="3048" started-at="2020-01-23T18:14:05 IST" finished-at="2020-01-23T18:14:08 IST">
      <class name="Linq.Automation.MouseMove">
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:Linq.Automation.MouseMove@1d8d30f7]" name="beforeMethod" is-config="true" duration-ms="3017" started-at="2020-01-23T18:14:05 IST" finished-at="2020-01-23T18:14:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[left]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f()[pri:0, instance:Linq.Automation.MouseMove@1d8d30f7]" name="f" duration-ms="5" started-at="2020-01-23T18:14:08 IST" finished-at="2020-01-23T18:14:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- Linq.Automation.MouseMove -->
    </test> <!-- move location card -->
    <test name="move catalog" duration-ms="3039" started-at="2020-01-23T18:14:08 IST" finished-at="2020-01-23T18:14:11 IST">
      <class name="Linq.Automation.MouseMove">
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:Linq.Automation.MouseMove@5bb21b69]" name="beforeMethod" is-config="true" duration-ms="3001" started-at="2020-01-23T18:14:08 IST" finished-at="2020-01-23T18:14:11 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[left]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f()[pri:0, instance:Linq.Automation.MouseMove@5bb21b69]" name="f" duration-ms="12" started-at="2020-01-23T18:14:11 IST" finished-at="2020-01-23T18:14:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- Linq.Automation.MouseMove -->
    </test> <!-- move catalog -->
    <test name="move sss catalog" duration-ms="3018" started-at="2020-01-23T18:14:11 IST" finished-at="2020-01-23T18:14:14 IST">
      <class name="Linq.Automation.MouseMove">
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:Linq.Automation.MouseMove@4abdb505]" name="beforeMethod" is-config="true" duration-ms="3003" started-at="2020-01-23T18:14:11 IST" finished-at="2020-01-23T18:14:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[right]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f()[pri:0, instance:Linq.Automation.MouseMove@4abdb505]" name="f" duration-ms="6" started-at="2020-01-23T18:14:14 IST" finished-at="2020-01-23T18:14:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- Linq.Automation.MouseMove -->
    </test> <!-- move sss catalog -->
    <test name="move sssdddd catalog" duration-ms="3015" started-at="2020-01-23T18:14:14 IST" finished-at="2020-01-23T18:14:17 IST">
      <class name="Linq.Automation.MouseMove">
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:Linq.Automation.MouseMove@45820e51]" name="beforeMethod" is-config="true" duration-ms="3002" started-at="2020-01-23T18:14:14 IST" finished-at="2020-01-23T18:14:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[right]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f()[pri:0, instance:Linq.Automation.MouseMove@45820e51]" name="f" duration-ms="4" started-at="2020-01-23T18:14:17 IST" finished-at="2020-01-23T18:14:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- Linq.Automation.MouseMove -->
    </test> <!-- move sssdddd catalog -->
    <test name="move sffsfs catalog" duration-ms="3006" started-at="2020-01-23T18:14:17 IST" finished-at="2020-01-23T18:14:20 IST">
      <class name="Linq.Automation.MouseMove">
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:Linq.Automation.MouseMove@12cdcf4]" name="beforeMethod" is-config="true" duration-ms="3002" started-at="2020-01-23T18:14:17 IST" finished-at="2020-01-23T18:14:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[up]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f()[pri:0, instance:Linq.Automation.MouseMove@12cdcf4]" name="f" duration-ms="1" started-at="2020-01-23T18:14:20 IST" finished-at="2020-01-23T18:14:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- Linq.Automation.MouseMove -->
    </test> <!-- move sffsfs catalog -->
  </suite> <!-- Suite -->
</testng-results>
